apiVersion: v1
kind: Namespace
metadata:
  name: airflow

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-logs
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: airflow-dags
  namespace: airflow
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:11
          env:
            - name: POSTGRES_USER
              value: airflow
            - name: POSTGRES_PASSWORD
              value: airflow
            - name: POSTGRES_DB
              value: airflow
          ports:
            - containerPort: 5432
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
      volumes:
        - name: postgres-data
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: airflow
spec:
  type: ClusterIP
  ports:
    - port: 5432
  selector:
    app: postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-web
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-web
  template:
    metadata:
      labels:
        app: airflow-web
    spec:
      containers:
        - name: airflow-web
          image: puckel/docker-airflow:latest
          env:
            - name: LOAD_EX
              value: "n"
            - name: EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__FERNET_KEY
              value: "YOUR_FERNET_KEY"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /usr/local/airflow/logs
              name: airflow-logs
            - mountPath: /usr/local/airflow/dags
              name: airflow-dags
      volumes:
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags

---
apiVersion: v1
kind: Service
metadata:
  name: airflow-web
  namespace: airflow
spec:
  type: LoadBalancer
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: airflow-web

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airflow-scheduler
  namespace: airflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airflow-scheduler
  template:
    metadata:
      labels:
        app: airflow-scheduler
    spec:
      containers:
        - name: airflow-scheduler
          image: puckel/docker-airflow:latest
          env:
            - name: LOAD_EX
              value: "n"
            - name: EXECUTOR
              value: LocalExecutor
            - name: AIRFLOW__CORE__FERNET_KEY
              value: "YOUR_FERNET_KEY"
            - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN
              value: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
          volumeMounts:
            - mountPath: /usr/local/airflow/logs
              name: airflow-logs
            - mountPath: /usr/local/airflow/dags
              name: airflow-dags
      volumes:
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: airflow-logs
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: airflow-dags
